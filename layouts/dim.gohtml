{{define "dim"}}
<!doctype html>
<html translate="no">
	<head>
		{{template "head"}}
		<style>
		#map {height: 700px;width: 1200px;margin-left: auto; margin-right: auto}
		img.leaflet-tile {image-rendering: pixelated;}
		</style>
		<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
			integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
			crossorigin=""/>
		<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
			integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
			crossorigin=""></script>
		<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/hammerjs@2.0.8"></script>
		<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/Leaflet.fullscreen.min.js'></script>
		<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/leaflet.fullscreen.css' rel='stylesheet' />

		<title>WebChunk {{.World.Name}}</title>
	</head>
	<body>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8" crossorigin="anonymous"></script>
		<div class="px-4 py-5 container">
			<h4><a class="nodecoration" href="/">WebChunk</a></h4>
			<h2>World {{.World.Name}}</h2>
			{{if avail "IP" .World}}<small>IP: <code>{{.World.IP}}</code></small>{{end}}
			<h3>Dimension {{.Dim.Name}}</h3>
			<hr>
			<div>
				<label>X<input class="d-inline form-control" style="max-width: 120px" type="number" id="gotoX" value="-280"></label>
				<label>Z<input class="d-inline form-control" style="max-width: 120px" type="number" id="gotoZ" value="620"></label>
				<label>S<input class="d-inline form-control" style="max-width: 120px" type="number" id="gotoS" value="2"></label>
				<a class="btn btn-primary" onclick="mapGoTo();">go to</a>
			</div>
		</div>
		<div id="map"></div>
		<script>
		let maxZoomBack = 8;
		function mapGoTo() {
			let z = document.getElementById('gotoZ').value;
			let x = document.getElementById('gotoX').value;
			let s = document.getElementById('gotoS').value;
			mymap.setView([-z/16, x/16], maxZoomBack-s);
		}
		L.CursorHandler = L.Handler.extend({
		    addHooks: function () {
		        this._popup = new L.Popup();
		        this._map.on('mouseover', this._open, this);
		        this._map.on('mousemove', this._update, this);
		        this._map.on('mouseout', this._close, this);
		    },
		    removeHooks: function () {
		        this._map.off('mouseover', this._open, this);
		        this._map.off('mousemove', this._update, this);
		        this._map.off('mouseout', this._close, this);
		    },
		    _open: function (e) {
		        this._update(e);
		        this._popup.openOn(this._map);
		    },
		    _close: function () {
		        this._map.closePopup(this._popup);
		    },
		    _update: function (e) {
		        this._popup.setLatLng(e.latlng)
		            .setContent(e.latlng.toString()+'<br>'+e.layerPoint.toString());
		    }
		});
		L.Map.addInitHook('addHandler', 'cursor', L.CursorHandler);
		var defaultLayerSettings = {
			maxNativeZoom: maxZoomBack, minNativeZoom: 0, maxZoom: maxZoomBack, minZoom: 0,
			tileSize: 256, zoomReverse: true,
			zoomSnap: 0.25, attribution: '&copy; McWebChunk Contributors'}

		var voidlayer = L.tileLayer('/thisdoesnotexist', defaultLayerSettings);
		{{range $i, $l := .Layers}}var layer{{noescapeJS $l.Name}} = L.tileLayer('/worlds/{{$.World.Name}}/{{$.Dim.Name}}/tiles/{{$l.Name}}/{z}/{x}/{y}/png', defaultLayerSettings);
		{{end}}
		
		L.GridLayer.GridCoordinates = L.GridLayer.extend({
			createTile: function (coords) {
				const tile = document.createElement('div');
				tile.style.outline = '1px solid green';
				tile.style.fontWeight = 'bold';
				tile.style.fontSize = '14pt';
				tile.innerHTML = [maxZoomBack-coords.z, coords.x, coords.y].join('/');
				tile.innerHTML += '<br>'+[coords.x*Math.pow(2, maxZoomBack-coords.z)*16, coords.y*Math.pow(2, maxZoomBack-coords.z)*16].join('/');
				return tile;
			},
		});
		L.gridLayer.gridCoordinates = function (opts) {
			return new L.GridLayer.GridCoordinates(opts);
		};
		let coordinatelayer = L.gridLayer.gridCoordinates();
		var mymap = L.map('map', {
			cursor: false,
			crs: L.CRS.Simple,
			fullscreenControl: true,
			layers: [{{range $1, $l := .Layers}}{{if $l.IsDefault}}layer{{noescapeJS $l.Name}},{{end}}{{end}} coordinatelayer]
		}).setView([0, 0], 3);
		L.control.scale().addTo(mymap);
		L.control.layers({
			{{range $1, $l := .Layers}}{{if $l.IsOverlay}}{{else}}"{{$l.DisplayName}}": layer{{noescapeJS $l.Name}},
			{{end}}{{end}}}, {
			{{range $1, $l := .Layers}}{{if $l.IsOverlay}}"{{$l.DisplayName}}": layer{{noescapeJS $l.Name}},
			{{else}}{{end}}{{end}}"Coordinates": coordinatelayer
		}).addTo(mymap);
		</script>
	</body>
</html>
{{end}}